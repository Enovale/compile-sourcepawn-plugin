"use strict";var f=Object.create;var p=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var y=(t,o,r,s)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of x(o))!g.call(t,n)&&n!==r&&p(t,n,{get:()=>o[n],enumerable:!(s=w(o,n))||s.enumerable});return t};var S=(t,o,r)=>(r=t!=null?f(h(t)):{},y(o||!t||!t.__esModule?p(r,"default",{value:t,enumerable:!0}):r,t));var u=S(require("fs/promises")),a=require("path"),e=require("@actions/core"),m=require("@actions/exec"),l=require("@actions/http-client"),i=require("@actions/tool-cache");function d(t=process.platform){let o={darwin:"mac",linux:"linux",win32:"windows"};if(!Object.keys(o).includes(t))throw new Error(`unsupported platform "${t}"`);return o[process.platform]}function $(){let t=["1.7","1.8","1.9","1.10","1.11","1.12"],o=(0,e.getInput)("sourcemod");if(!t.includes(o))throw new TypeError(`Unsupported Sourcemod version: ${o}`);return o}async function P(t){t=t.split(t.includes("/")?"/":"\\").filter(o=>!o.endsWith(".smx")).join("/"),await u.default.mkdir(t,{recursive:!0})}async function O(...t){let o=t.filter(Boolean).join(" "),r=await(0,m.exec)(o);if(r!==0)throw new Error(`command exited with ${r}`)}async function v(t){let r={linux:i.extractTar,mac:i.extractZip,windows:i.extractZip}[d()];return await r(t)}async function E(t){let o=new l.HttpClient("smdrop"),r=`sourcemod-latest-${d()}`;try{let s=await(await o.get(`https://sm.alliedmods.net/smdrop/${t}/${r}`)).readBody(),n=await(0,i.downloadTool)(`https://sm.alliedmods.net/smdrop/${t}/${s}`),c=await v(n);return(0,e.addPath)((0,a.join)(c,"addons","sourcemod","scripting")),(0,a.join)(c,"addons","sourcemod")}catch{throw new Error(`Couldn't fetch ${d()} version of Sourcemod ${t}`)}}function C(){let t=["arm64","ppc64","s390x","x64"],o=(0,e.getInput)("comp64");if(o.length===0&&(o="true"),!["true","false"].includes(o))throw new Error(`Unsupported argument for comp64: "${o}"`);return t.includes(process.arch)&&o==="true"}async function F(){let t=(0,e.getInput)("input",{required:!0}),o=(0,e.getInput)("output",{required:!0}),r=(0,e.getInput)("includes").split(/\s/g).filter(Boolean).map(s=>`-i ${s}`).join(" ");try{let s=$(),n=await E(s),c=(0,a.join)(n,"scripting","include");await P(o),await O(C()?"spcomp64":"spcomp",t,`-o ${o}`,`-i ${c}`,r,"-O2 -v2"),(0,e.setOutput)("result",o)}catch(s){(0,e.setFailed)(`Action failed: ${s.message}`)}}F();
